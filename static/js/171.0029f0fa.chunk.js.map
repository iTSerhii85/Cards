{"version":3,"file":"static/js/171.0029f0fa.chunk.js","mappings":"kPAGaA,EAAeC,EAAAA,GAAAA,OAAH,yqBA+BZC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,mYAuBVG,EAAOH,EAAAA,GAAAA,EAAH,sC,6CC3CbI,EAAW,EAkFf,EAhFe,WAAO,IAAD,IACnB,GAAkCC,EAAAA,EAAAA,YAAWC,EAAAA,GAArCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,YAClB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,UAAS,GAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAAsBJ,EAAAA,EAAAA,WAAS,GAA/B,eAAOK,EAAP,KAAYC,EAAZ,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAEpD,GAAkCZ,EAAAA,EAAAA,UAAS,IAA3C,eAAOa,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAWC,MAAK,SAAAC,GACdvB,EAAWwB,KAAKC,MAAMF,EAAKG,OAAS,EACrC,GACF,GAAE,KAEHN,EAAAA,EAAAA,YAAU,WACHV,IAGLiB,EAAAA,EAAAA,IAAWnB,GAAMc,MAAK,SAAAC,GAAI,OACxBhB,GAAS,SAAAqB,GAAS,wBAAQA,IAAR,OAAsBL,GAAtB,GADM,GAG3B,GAAE,CAACb,EAAKF,KAETY,EAAAA,EAAAA,YAAU,WACU,QAAdF,KACFG,EAAAA,EAAAA,MAAWC,MAAK,SAAAC,GACdvB,EAAWwB,KAAKC,MAAMF,EAAKG,OAAS,EACrC,KACDC,EAAAA,EAAAA,IAAWnB,GAAMc,MAAK,SAAAC,GAAI,OACxBhB,GAAS,SAAAqB,GAAS,wBAAQA,IAAR,OAAsBL,GAAtB,GADM,KAIV,WAAdL,KACFW,EAAAA,EAAAA,KAAsB,GAAOP,MAAK,SAAAC,GAChCvB,EAAWwB,KAAKC,MAAMF,EAAKG,OAAS,EACrC,KACDI,EAAAA,EAAAA,KAAmB,EAAOtB,GAAMc,MAAK,SAAAC,GAAI,OACvChB,GAAS,SAAAqB,GAAS,wBAAQA,IAAR,OAAsBL,GAAtB,GADqB,KAIzB,cAAdL,KACFW,EAAAA,EAAAA,KAAsB,GAAMP,MAAK,SAAAC,GAC/BvB,EAAWwB,KAAKC,MAAMF,EAAKG,OAAS,EACrC,KACDI,EAAAA,EAAAA,KAAmB,EAAMtB,GAAMc,MAAK,SAAAC,GAAI,OACtChB,GAAS,SAAAqB,GAAS,wBAAQA,IAAR,OAAsBL,GAAtB,GADoB,IAI3C,GAAE,CAACL,EAAWV,IAUf,OACE,iCACE,UAACX,EAAD,CAAYkC,GAAIjB,EAAakB,QAA7B,WACE,SAAC,cAAD,CAAsBC,MAAO,CAAEC,KAAM,QAArC,UACE,SAAC,MAAD,OAEF,SAACnC,EAAD,0BAEF,SAAC,KAAD,CAAUoC,MAAO7B,IAChBH,IAAY,SAAC,KAAD,CAAQiC,cAjBH,SAAAH,GACpBtB,GAAO,GACPF,EAAQ,GACRF,EAAS,IACTY,EAAac,GACb7B,GAAY,EACb,IAYIJ,EAAWQ,IACV,SAACb,EAAD,CAAc0C,KAAK,SAASC,QAAS,kBAAM7B,EAAQD,EAAO,EAArB,EAArC,UACE,SAACT,EAAD,4BAKT,C","sources":["pages/Tweets/Tweets.style.js","pages/Tweets/Tweets.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledButton = styled.button`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: -15px;\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n  align-items: center;\n  width: 196px;\n  height: 50px;\n  border-radius: 10.3108px;\n  background: #ebd8ff;\n  box-shadow: 10px 10px 5px 0px rgba(0, 0, 0, 0.75);\n  -webkit-box-shadow: 10px 10px 5px 0px rgba(0, 0, 0, 0.75);\n  -moz-box-shadow: 10px 10px 5px 0px rgba(0, 0, 0, 0.75);\n\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 22px;\n  line-height: 22px;\n  text-transform: uppercase;\n  color: #373737;\n  cursor: pointer;\n\n  :hover {\n    color: #f36429;\n    scale: 1.2;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n  align-items: center;\n  margin-top: 26px;\n  width: 196px;\n  height: 50px;\n\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 22px;\n  line-height: 22px;\n  text-transform: uppercase;\n  color: #373737;\n\n  :hover {\n    color: #f36429;\n    scale: 1.2;\n  }\n`;\n\nexport const Text = styled.p`\n  margin: 0;\n`;\n","import { CardList, Filter } from 'components';\nimport { useEffect, useRef, useState, useContext } from 'react';\nimport {\n  fetchAll,\n  fetchAllFilteredUsers,\n  fetchFilteredUsers,\n  fetchUsers,\n} from 'services/fetch';\nimport { StyledButton, StyledLink, Text } from './Tweets.style';\nimport { IconContext } from 'react-icons';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport { useLocation } from 'react-router-dom';\nimport { MyContext } from 'context';\n\nlet allPages = 1;\n\nconst Tweets = () => {\n  const { isActive, setIsActive } = useContext(MyContext);\n  const [cards, setCards] = useState([]);\n  const [page, setPage] = useState(1);\n  const [all, setAll] = useState(true);\n\n  const location = useLocation();\n  const backLocation = useRef(location.state?.from ?? '/');\n\n  const [following, setFollowing] = useState('');\n\n  useEffect(() => {\n    fetchAll().then(data => {\n      allPages = Math.round(data.length / 3);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!all) {\n      return;\n    }\n    fetchUsers(page).then(data =>\n      setCards(prevState => [...prevState, ...data])\n    );\n  }, [all, page]);\n\n  useEffect(() => {\n    if (following === 'All') {\n      fetchAll().then(data => {\n        allPages = Math.round(data.length / 3);\n      });\n      fetchUsers(page).then(data =>\n        setCards(prevState => [...prevState, ...data])\n      );\n    }\n    if (following === 'Follow') {\n      fetchAllFilteredUsers(false).then(data => {\n        allPages = Math.round(data.length / 3);\n      });\n      fetchFilteredUsers(false, page).then(data =>\n        setCards(prevState => [...prevState, ...data])\n      );\n    }\n    if (following === 'Following') {\n      fetchAllFilteredUsers(true).then(data => {\n        allPages = Math.round(data.length / 3);\n      });\n      fetchFilteredUsers(true, page).then(data =>\n        setCards(prevState => [...prevState, ...data])\n      );\n    }\n  }, [following, page]);\n\n  const filteredUsers = value => {\n    setAll(false);\n    setPage(1);\n    setCards([]);\n    setFollowing(value);\n    setIsActive(false);\n  };\n\n  return (\n    <>\n      <StyledLink to={backLocation.current}>\n        <IconContext.Provider value={{ size: '30px' }}>\n          <AiOutlineArrowLeft />\n        </IconContext.Provider>\n        <Text>Go back</Text>\n      </StyledLink>\n      <CardList users={cards} />\n      {isActive && <Filter filteredUsers={filteredUsers} />}\n      {allPages > page && (\n        <StyledButton type=\"button\" onClick={() => setPage(page + 1)}>\n          <Text>Load more</Text>\n        </StyledButton>\n      )}\n    </>\n  );\n};\n\nexport default Tweets;\n"],"names":["StyledButton","styled","StyledLink","Link","Text","allPages","useContext","MyContext","isActive","setIsActive","useState","cards","setCards","page","setPage","all","setAll","location","useLocation","backLocation","useRef","state","from","following","setFollowing","useEffect","fetchAll","then","data","Math","round","length","fetchUsers","prevState","fetchAllFilteredUsers","fetchFilteredUsers","to","current","value","size","users","filteredUsers","type","onClick"],"sourceRoot":""}