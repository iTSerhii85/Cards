{"version":3,"file":"static/js/171.ff7b6046.chunk.js","mappings":"wOAEaA,EAAeC,EAAAA,GAAAA,OAAH,uYAeZC,EAAOD,EAAAA,GAAAA,EAAH,2M,4CCTbE,EAAW,EAwCf,EAtCe,WAAO,IAAD,IACnB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,UAAS,GAAjC,eAAOG,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAcpD,OAZAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAWC,MAAK,SAAAC,GACdf,EAAWe,EAAKC,OAAS,CAC1B,GACF,GAAE,KAEHJ,EAAAA,EAAAA,YAAU,YACRK,EAAAA,EAAAA,IAAWb,GAAMU,MAAK,SAAAC,GAAI,OACxBZ,GAAS,SAAAe,GAAS,wBAAQA,IAAR,OAAsBH,GAAtB,GADM,GAG3B,GAAE,CAACX,KAGF,iCACE,SAAC,KAAD,CAAMe,GAAIX,EAAaY,QAAvB,UACE,UAACvB,EAAD,YACE,SAAC,cAAD,CAAsBwB,MAAO,CAAEC,KAAM,QAArC,UACE,SAAC,MAAD,OAEF,SAACvB,EAAD,4BAGJ,SAAC,KAAD,CAAUwB,MAAOrB,IAChBF,EAAWI,IACV,SAACP,EAAD,CAAc2B,KAAK,SAASC,QAAS,kBAAMpB,EAAQD,EAAO,EAArB,EAArC,UACE,SAACL,EAAD,4BAKT,C","sources":["pages/Tweets/Tweets.style.js","pages/Tweets/Tweets.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n  align-items: center;\n  margin-top: 26px;\n  width: 196px;\n  height: 50px;\n  border-radius: 10.3108px;\n  background: #ebd8ff;\n  box-shadow: 10px 10px 5px 0px rgba(0, 0, 0, 0.75);\n  -webkit-box-shadow: 10px 10px 5px 0px rgba(0, 0, 0, 0.75);\n  -moz-box-shadow: 10px 10px 5px 0px rgba(0, 0, 0, 0.75);\n`;\n\nexport const Text = styled.p`\n  margin: 0;\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 22px;\n  line-height: 22px;\n  text-transform: uppercase;\n  color: #373737;\n`;\n","import { CardList } from 'components';\nimport { useEffect, useRef, useState } from 'react';\nimport { fetchAll, fetchUsers } from 'services/fetch';\nimport { StyledButton, Text } from './Tweets.style';\nimport { IconContext } from 'react-icons';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport { Link, useLocation } from 'react-router-dom';\n\nlet allPages = 1;\n\nconst Tweets = () => {\n  const [cards, setCards] = useState([]);\n  const [page, setPage] = useState(1);\n  const location = useLocation();\n  const backLocation = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    fetchAll().then(data => {\n      allPages = data.length / 3;\n    });\n  }, []);\n\n  useEffect(() => {\n    fetchUsers(page).then(data =>\n      setCards(prevState => [...prevState, ...data])\n    );\n  }, [page]);\n\n  return (\n    <>\n      <Link to={backLocation.current}>\n        <StyledButton>\n          <IconContext.Provider value={{ size: '30px' }}>\n            <AiOutlineArrowLeft />\n          </IconContext.Provider>\n          <Text>Go back</Text>\n        </StyledButton>\n      </Link>\n      <CardList users={cards} />\n      {allPages > page && (\n        <StyledButton type=\"button\" onClick={() => setPage(page + 1)}>\n          <Text>Load more</Text>\n        </StyledButton>\n      )}\n    </>\n  );\n};\n\nexport default Tweets;\n"],"names":["StyledButton","styled","Text","allPages","useState","cards","setCards","page","setPage","location","useLocation","backLocation","useRef","state","from","useEffect","fetchAll","then","data","length","fetchUsers","prevState","to","current","value","size","users","type","onClick"],"sourceRoot":""}